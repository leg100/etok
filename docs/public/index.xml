<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on Etok Documentation</title>
    <link>https://docs.etok.dev/</link>
    <description>Recent content in Introduction on Etok Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://docs.etok.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://docs.etok.dev/docs/reference/commands/terraform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.etok.dev/docs/reference/commands/terraform/</guid>
      <description>Supported Terraform Commands #  Most terraform commands are supported. A (Q) means it is a queueable command.
 apply(Q) console destroy(Q) fmt force-unlock(Q) get graph import(Q) init(Q) output plan providers providers lock refresh(Q) state list state mv(Q) state pull state push(Q) state replace-provider(Q) state rm(Q) state show show taint(Q) untaint(Q) validate  Ensure terraform flags follow a double dash:
etok apply -- -auto-approve   </description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.etok.dev/docs/reference/operator_install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.etok.dev/docs/reference/operator_install/</guid>
      <description>Operator Install #  The command etok install installs the operator component onto the cluster.
It will perform an upgrade if it is already installed. This can also be useful for making configuration changes to an existing installation.
By default, it&amp;rsquo;ll use the namespace etok. It&amp;rsquo;ll create the namespace if it doesn&amp;rsquo;t already exist. To use a non-default namespace, pass the --namespace flag.
Run the version command to retrieve the currently installed operator version:</description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.etok.dev/docs/background/configuration_upload/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.etok.dev/docs/background/configuration_upload/</guid>
      <description>What is uploaded to the pod when running a command? #  The contents of the root module (the current working directory, or the value of the path flag) is uploaded. Additionally, if the root module configuration contains references to other modules on the local filesystem, then these too are uploaded, along with all such modules recursively referenced (modules referencing modules, and so forth). The directory structure containing all modules is maintained on the kubernetes pod, ensuring relative references remain valid (e.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.etok.dev/docs/background/performance_optimization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.etok.dev/docs/background/performance_optimization/</guid>
      <description>How do I optimize performance? #  You can reasonably expect commands to start running in less than a couple of seconds. That depends on several factors.
Minimize upload of data. As documented above, use a .terraformignore file to skip files you don&amp;rsquo;t need to upload. Pass the flag -v=3 to see which files are being uploaded and which are ignored.
Disable TTY. Pass the --no-tty flag to the command. By default, if a TTY is detected, Etok performs a handshake with the pod which adds a delay.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.etok.dev/docs/guides/state_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.etok.dev/docs/guides/state_backup/</guid>
      <description>State Backup and Restore #  Backup of state to cloud storage is supported. If enabled, every update to state is backed up to a cloud storage bucket. When a new workspace is created, the operator checks if a backup exists. If so, it is restored.
Setup Cloud Storage #  First follow instructions for configuring backups for either GCS or S3:
GCS   Create a GCS bucket:
gsutil mb gs://my-backup-bucket   Provide the etok operator with the necessary privileges.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.etok.dev/docs/reference/access_control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.etok.dev/docs/reference/access_control/</guid>
      <description>Access Control #  The install command installs ClusterRoles (and ClusterRoleBindings) for your convenience:
 etok-user: includes the permissions necessary for running unprivileged commands etok-admin: additional permissions for managing workspaces and running privileged commands  Amend the bindings accordingly to add/remove users. For example to amend the etok-user binding:
kubectl edit clusterrolebinding etok-user Note: To restrict users to individual namespaces you&amp;rsquo;ll want to create RoleBindings referencing the ClusterRoles.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.etok.dev/docs/reference/commands/additional/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.etok.dev/docs/reference/commands/additional/</guid>
      <description>Additional Commands #   sh(Q) - run shell or arbitrary command in workspace  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.etok.dev/docs/reference/credentials/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.etok.dev/docs/reference/credentials/</guid>
      <description>Credentials #  The operator as well as commands may require credentials. The operator may require credentials for performing state backups to cloud storage. And commands such as plan and apply may require credentials for using various terraform providers such as for AWS or GCP.
It&amp;rsquo;s advisable where possible to adopt approaches such as Workload Identity instead. They avoid the need to use credentials, thereby also avoiding the associated overhead and security risks, such as manual rotation, ensuring they are not printed in output, etc.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.etok.dev/docs/reference/restrictions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.etok.dev/docs/reference/restrictions/</guid>
      <description>Restrictions #  Both the terraform configuration and the terraform state, after compression, are subject to a 1MiB limit. This due to the fact that they are stored in a config map and a secret respectively, and the data stored in either cannot exceed 1MiB.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.etok.dev/docs/reference/state/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.etok.dev/docs/reference/state/</guid>
      <description>State #  Terraform state is stored in a secret using the kubernetes backend. It comes into existence once you run etok init. If the workspace is deleted then so is the state.
Do not define a backend in your terraform configuration - it will conflict with the configuration Etok automatically installs.  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.etok.dev/docs/reference/testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.etok.dev/docs/reference/testing/</guid>
      <description>E2E Tests #  Run the following make task to run a battery of end-to-end tests against a running kubernetes cluster:
make e2e One or more environment variables need to be specified:
 BACKUP_BUCKET - GCS bucket to backup state to during the tests  By default the tests assume you&amp;rsquo;re running kind. For tests targeting kind you need to also specify:
 GOOGLE_APPLICATION_CREDENTIALS - Path to a file containing a service account key with credentials to read and write to $BACKUP_BUCKET  To target a GKE cluster, set ENV=gke along with:</description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.etok.dev/docs/tutorials/getting_started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.etok.dev/docs/tutorials/getting_started/</guid>
      <description>Getting Started #  This tutorial will guide you through installing and running etok for the first time.
You&amp;rsquo;re expected to be familiar with both terraform and kubernetes.
Kubernetes Cluster #  Firstly ensure you have access to a kubernetes cluster. If you don&amp;rsquo;t have access to a cluster then you might want to install kind, a tool for locally running a cluster in a docker container.
Also, in order to install etok, ensure you have extensions permissions on the cluster.</description>
    </item>
    
    <item>
      <title>CRDs</title>
      <link>https://docs.etok.dev/docs/background/crds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.etok.dev/docs/background/crds/</guid>
      <description>CRDs #  Etok uses two CRDs (custom resource definitions):
 Run Workspace  Run #  Whenever you run a terraform command with etok, a Run resource is created:
&amp;gt; etok plan &amp;gt; kubectl get run NAME COMMAND WORKSPACE PHASE AGE run-290w7 plan dev completed 12s Workspace #  A Workspace resource maps to a terraform workspace. The command etok workspace new is a convenience method for creating a Workspace resource:</description>
    </item>
    
    <item>
      <title>Workload Identity</title>
      <link>https://docs.etok.dev/docs/guides/workload_identity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.etok.dev/docs/guides/workload_identity/</guid>
      <description>Workload Identity #  Workload Identity lets GKE pods assume privileges to Google Cloud without the use of credentials. Etok can use Workload Identity both for terraform and for the operator: terraform can use it to authorize the Google Cloud provider to manage Google Cloud resources; the operator can use it to perform state backups.
Terminology #  With Workload Identity, you configure a Kubernetes service account to act as a Google service account.</description>
    </item>
    
  </channel>
</rss>
