<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Etok Documentation</title><link>https://docs.etok.dev/docs/reference/</link><description>Recent content on Etok Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://docs.etok.dev/docs/reference/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://docs.etok.dev/docs/reference/operator_install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.etok.dev/docs/reference/operator_install/</guid><description>Operator Install # The command etok install installs the operator component onto the cluster.
It will perform an upgrade if it is already installed. This can also be useful for making configuration changes to an existing installation.
By default, it&amp;rsquo;ll use the namespace etok. It&amp;rsquo;ll create the namespace if it doesn&amp;rsquo;t already exist. To use a non-default namespace, pass the --namespace flag.
Run the version command to retrieve the currently installed operator version:</description></item><item><title/><link>https://docs.etok.dev/docs/reference/access_control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.etok.dev/docs/reference/access_control/</guid><description>Access Control # The install command installs ClusterRoles (and ClusterRoleBindings) for your convenience:
etok-user: includes the permissions necessary for running unprivileged commands etok-admin: additional permissions for managing workspaces and running privileged commands Amend the bindings accordingly to add/remove users. For example to amend the etok-user binding:
kubectl edit clusterrolebinding etok-user Note: To restrict users to individual namespaces you&amp;rsquo;ll want to create RoleBindings referencing the ClusterRoles.</description></item><item><title/><link>https://docs.etok.dev/docs/reference/credentials/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.etok.dev/docs/reference/credentials/</guid><description>Credentials # The operator as well as commands may require credentials. The operator may require credentials for performing state backups to cloud storage. And commands such as plan and apply may require credentials for using various terraform providers such as for AWS or GCP.
It&amp;rsquo;s advisable where possible to adopt approaches such as Workload Identity instead. They avoid the need to use credentials, thereby also avoiding the associated overhead and security risks, such as manual rotation, ensuring they are not printed in output, etc.</description></item><item><title/><link>https://docs.etok.dev/docs/reference/github_app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.etok.dev/docs/reference/github_app/</guid><description>Github App # The Github app integrates Github with Etok. The app is a webhook server running on kubernetes, listening for events from Github, invoking Etok runs and reporting information back to Github, including whether the runs were successful as well as log output from terraform. The app is separate to the operator, which must also be installed.
Deployment # The app is deployed to the kubernetes cluster using the github deploy subcommand:</description></item><item><title/><link>https://docs.etok.dev/docs/reference/restrictions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.etok.dev/docs/reference/restrictions/</guid><description>Restrictions # Both the terraform configuration and the terraform state, after compression, are subject to a 1MiB limit. This due to the fact that they are stored in a config map and a secret respectively, and the data stored in either cannot exceed 1MiB.</description></item><item><title/><link>https://docs.etok.dev/docs/reference/state/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.etok.dev/docs/reference/state/</guid><description>State # Terraform state is stored in a secret using the kubernetes backend. It comes into existence once you run etok init. If the workspace is deleted then so is the state.
Do not define a backend in your terraform configuration - it will conflict with the configuration Etok automatically installs.</description></item><item><title/><link>https://docs.etok.dev/docs/reference/testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.etok.dev/docs/reference/testing/</guid><description>E2E Tests # To run a battery of end-to-end tests against a running kubernetes cluster:
make e2e One or more environment variables need to be specified:
BACKUP_BUCKET - GCS bucket to backup state to during the tests By default the tests assume you&amp;rsquo;re running kind. For tests targeting kind you need to also specify:
GOOGLE_APPLICATION_CREDENTIALS - Path to a file containing a service account key with credentials to read and write to $BACKUP_BUCKET To target a GKE cluster, set ENV=gke along with:</description></item></channel></rss>